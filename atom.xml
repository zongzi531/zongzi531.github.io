<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zong</title>
  
  
  <link href="https://zongzi531.com/atom.xml" rel="self"/>
  
  <link href="https://zongzi531.com/"/>
  <updated>2024-02-01T13:35:11.000Z</updated>
  <id>https://zongzi531.com/</id>
  
  <author>
    <name>Zong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>龙行大运</title>
    <link href="https://zongzi531.com/2024/02/01/%E9%BE%99%E8%A1%8C%E5%A4%A7%E8%BF%90/"/>
    <id>https://zongzi531.com/2024/02/01/%E9%BE%99%E8%A1%8C%E5%A4%A7%E8%BF%90/</id>
    <published>2024-02-01T13:35:11.000Z</published>
    <updated>2024-02-01T13:35:11.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><p>这一年可以说比去年更“精彩”，团队独立后，确实向前迈了一大步，但是由于市场环境的影响，团队最终被解散，部分成员出去成立了子公司，部分成员分布在了公司其他部门，部分成员离开了公司。</p><p>确实也慢慢接受了这些变化，虽然自己是喜欢变化的，但是这个变化确实有点“猛”。</p><p>低代码的业务确实也刚刚进入落地即将闭环的阶段，转而我开始从事基础建设，开始编写 Node.js ，开始尝试做运维的工作。</p><p>当然，这还是能让我从中学习到一些些产品的知识。</p><p>就眼下而已，其实做好手上事，持续积累即可，因为就算焦虑了也没用。</p><p>对了，关于性能优化，今年确实做了比较多的在浏览器上减少 JavaScript 的执行时间的相关优化工作。</p><p>这个月设计了 C2D 和 D2C 的架构，也不知道新年能不能就此有新的进展。</p><h1 id="基础建设"><a href="#基础建设" class="headerlink" title="基础建设"></a>基础建设</h1><ul><li>低代码引擎、低代码产品孵化</li><li>[Unity] <a href="https://github.com/zongzi531/make_fun">make_fun</a></li><li>Node.js 服务端研发</li></ul><h1 id="开源贡献"><a href="#开源贡献" class="headerlink" title="开源贡献"></a>开源贡献</h1><ul><li><p><a href="https://github.com/insightfuls/inquirer-tree-prompt">insightfuls&#x2F;inquirer-tree-prompt</a> <a href="https://github.com/insightfuls/inquirer-tree-prompt/pull/10">#10</a></p></li><li><p><a href="https://github.com/oven-sh/bun">oven-sh&#x2F;bun</a> <a href="https://github.com/oven-sh/bun/pull/5243">#5243</a> <a href="https://github.com/oven-sh/bun/pull/5250">#5250</a> <a href="https://github.com/oven-sh/bun/pull/5451">#5451</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://zongzi531.com/categories/Blog/"/>
    
    
    <category term="Blog" scheme="https://zongzi531.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>２０２４年おめでとうございます</title>
    <link href="https://zongzi531.com/2024/01/01/%EF%BC%92%EF%BC%90%EF%BC%92%EF%BC%94%E5%B9%B4%E3%81%8A%E3%82%81%E3%81%A7%E3%81%A8%E3%81%86%E3%81%94%E3%81%96%E3%81%84%E3%81%BE%E3%81%99/"/>
    <id>https://zongzi531.com/2024/01/01/%EF%BC%92%EF%BC%90%EF%BC%92%EF%BC%94%E5%B9%B4%E3%81%8A%E3%82%81%E3%81%A7%E3%81%A8%E3%81%86%E3%81%94%E3%81%96%E3%81%84%E3%81%BE%E3%81%99/</id>
    <published>2024-01-01T10:51:08.000Z</published>
    <updated>2024-01-01T10:51:08.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><h2 id="想先说的话"><a href="#想先说的话" class="headerlink" title="想先说的话"></a>想先说的话</h2><p>很明显大家都能感受到今年的经济很差，最后只能说难，大家都难。</p><p>虽然说开头这么消极，但是我还是对未来有所规划的，至少不能停滞不前吧。</p><p>能确定的大方向即是架构，如果说我想在这个行业继续深耕下去的话，架构是一定的。当然也可能转行咯，关注动态吧。</p><p>现在比较火热的就是 AI 了，人们对 AI 有着很多畅想，并且 AI 领域确实存在着很多机会。</p><p>比较让我没想到的是，下半年的时候部门没了，所以低代码就此应该就打住了。</p><p>Unity 其实在年中的时候也简单学习和把玩了一下，但是考虑到自己起步晚的事，想想还是算了。</p><p>更让我们没想到的是，进入到新部门做公司 UED 的时候，我居然开始写 Node.js 服务端了，还得负责运维的工作。</p><p>新年的工作走向很有可能继续是从事服务端开发的工作，有好有坏吧。</p><p>坏就是，我开始会慢慢脱离前端，在前端领域没办法继续“精”下去，虽然我本来在视觉层也只是皮毛，更擅长一些抽象。</p><p>好就是，我能够接触到服务端的内容，从整体去接触产品，会让走向架构轻松一些。</p><p>这可能会成为我架构方向的一个契机，也可能会成为我学习 Python 的一个契机。</p><p>但是也说不定，就领大礼包了～</p><h2 id="回顾-2023-年"><a href="#回顾-2023-年" class="headerlink" title="回顾 2023 年"></a>回顾 2023 年</h2><ul><li><strong><span class="github-emoji" alias="couplekiss_man_woman" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f469-2764-1f48b-1f468.png?v8">👩️‍❤️‍💋️‍👨</span> 更爱老婆，和她开心幸福在一起</strong></li><li><strong><span class="github-emoji" alias="heartpulse" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f497.png?v8">💗</span> 更爱家人，祝家人身体健康，平平安安</strong></li><li><strong><span class="github-emoji" alias="horse_racing" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c7.png?v8">🏇</span> 锻炼身体</strong> <code>适量</code></li><li><del><strong><span class="github-emoji" alias="notebook_with_decorative_cover" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d4.png?v8">📔</span> 日本語学習文法・語彙</strong></del></li><li><strong><span class="github-emoji" alias="books" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png?v8">📚</span> 建立自己的知识体系</strong> <code>持续进行</code></li><li><del><strong>深入 Rust</strong></del></li><li><strong>深入低代码</strong></li><li><strong>性能优化</strong></li><li><strong>初探 Unity</strong></li><li><strong>初探机器学习</strong></li><li><strong>初探服务端 Node.js</strong></li></ul><h2 id="展望-2024-年"><a href="#展望-2024-年" class="headerlink" title="展望 2024 年"></a>展望 2024 年</h2><ul><li><strong><span class="github-emoji" alias="couplekiss_man_woman" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f469-2764-1f48b-1f468.png?v8">👩️‍❤️‍💋️‍👨</span> 更爱老婆，和她开心幸福在一起</strong></li><li><strong><span class="github-emoji" alias="heartpulse" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f497.png?v8">💗</span> 更爱家人，祝家人身体健康，平平安安</strong></li><li><strong><span class="github-emoji" alias="horse_racing" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c7.png?v8">🏇</span> 锻炼身体</strong></li><li><strong><span class="github-emoji" alias="books" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png?v8">📚</span> 建立自己的知识体系</strong></li><li><strong>架构</strong></li><li><strong>Python</strong></li><li><strong>机器学习</strong></li></ul>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://zongzi531.com/categories/Blog/"/>
    
    
    <category term="Blog" scheme="https://zongzi531.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>登山</title>
    <link href="https://zongzi531.com/2023/12/01/%E7%99%BB%E5%B1%B1/"/>
    <id>https://zongzi531.com/2023/12/01/%E7%99%BB%E5%B1%B1/</id>
    <published>2023-12-01T10:39:00.000Z</published>
    <updated>2023-12-01T10:39:00.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><p>也算不上是登山吧，哈哈哈！坐中巴车上山 15 分钟，路程非常山路，自己开车估计得半小时起码。</p><p>到了山顶感觉真好，山上有两棵很大的银杏树，去的时候叶子半绿半黄。</p><p>下山的时候是走下山的，走了差不多 1 个小时。</p><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><p>整个月的工作内容基本就是一个后端实习生了……</p><p>继续上个月的服务端功能，这个月学习了不少知识。</p><p>数据库本来只会使用 <code>typeorm</code> 进行简单的 API 调用，比如 <code>find</code> 之类的简单操作，对于需要聚合多张表的数据也是使用了比较拙劣的办法，查出一张表并根据这张表的关联 ID 进行遍历查询，最后进行聚合，后来经过后端大哥的提示，可以使用多表关联查询来实现，虽然过程中出现了一些 SQL 的报错是后端大哥帮忙给出的解决思路，但是自己对 SQL 的时候确实还是一片空白。</p><p>数据库备份则是通过 <code>pg_dump</code> 来进，还原则是通过 <code>psql</code> 进行，这些命令都依赖于 <code>postgresql-client</code> 这个库。</p><p>Docker 方面，一是将 GitLab Runner 从部署服务器上运行调整为 Docker 容器运行，以确保每个 <code>stage</code> 的执行过程足够纯粹。</p><p>也经历了 Docker 镜像启动时需要添加额外的 <code>hosts</code> 配置，解决 DNS 映射问题，以及自己打包依赖集合镜像。</p><p>因为要经历 Docker 镜像的推送，考虑通过登录服务器来操作，利用 <code>ssh-agent</code> 来实现免密登录服务器，以进行一系列操作，比如推送镜像、更新服务等。</p><p>特别需要一提的是挂载功能真的很好用。</p><p>NestJS 开启了日志功能，便于 API 调试，虽然没做持久化，但是可以直接进入容器查看日志，如果考虑做持久化的话，结合挂载功能实现即可，只不过需要额外考虑日志存储的上限，清除等逻辑。</p><p>并且在开发的过程中也发现了，起初数据库设计的不完全，结合数据库迁移 migration 对数据库进行了字段补充。</p><p>服务端的单元测试算是其中比较轻松的，连接测试数据库，保证每一个测试用例的纯净，根据业务场景编写单元测试。</p><p>部署过程中也为前端仓库添加 CI 、 Docker 镜像制作、自动化等工作，也同时配置了 Nginx 的配置文件，算是简单的尝试了一把。</p><p>不仅部署了前端，还针对各环境提供了测试和正式环境的部署，并且对正式环境关闭了端口映射，统一通过网关进行对外暴露（简单尝试了进入容器查询数据库数据）。</p><p>办公网环境同时还提供给前端同学可视化 Docker 操作界面 portainer 使用。</p><p>看似这个月的服务端学习过程比较顺利，但是我们原业务组的后端被“优化了”，我来接手原业务组 Node.js 侧的业务，还部分接手部署相关的工作。真的是挑战啊！</p><p>同时小组有打算尝试接入 AI 来辅助开发的意向，后续计划开始预研。</p><p>又能尝试新的事物咯！</p>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://zongzi531.com/categories/Blog/"/>
    
    
    <category term="Blog" scheme="https://zongzi531.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>初入后端</title>
    <link href="https://zongzi531.com/2023/11/01/%E5%88%9D%E5%85%A5%E5%90%8E%E7%AB%AF/"/>
    <id>https://zongzi531.com/2023/11/01/%E5%88%9D%E5%85%A5%E5%90%8E%E7%AB%AF/</id>
    <published>2023-11-01T09:39:05.000Z</published>
    <updated>2023-11-01T09:39:05.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><p>国庆回来之后，开始从事服务端开发的工作，也在服务端同事的帮助下，快速的熟悉了服务端的搭建及开发。</p><p>从框架选型开始，我选择了一个较为成熟生态的 NestJS 服务端框架，数据库选用 postgresql 。</p><p>开发规范则也是按照 NestJS 推荐的最佳实践进行执行，从 <code>controllers</code> <code>entities</code> <code>services</code> <code>modules</code> <code>dtos</code> <code>filters</code> <code>interceptors</code> 到单元测试，都是按照推荐规范进行，也是感受了一波服务端的开发规范吧。</p><p>数据库从熟悉基础的 SQL 语言外，也尝试了 <code>typeorm</code> 的同步生成功能（当然，这是不推荐在生产使用的，但是在单元测试中我选择使用同步功能，以保证每个测试用例都可以纯净的执行），最后也是选用 SQL + migration 进行初始化的实现，当然也满足后期迭代的数据库迁移工作。</p><p>实现基础的 API 后也体验了使用 swagger 自动生成 API 文档的功能，感受还不错。</p><p>通过 redis 来记录用户登录状态，也是简单尝试了一把鉴权。</p><p>再来就是 CI 了，因为研发环境相当于是私有环境，部署环境不仅需要在私有环境上部署，还要在办公环境上部署，所以选型考虑使用 docker 来完成。</p><p>私有环境部署较为简单，利用 CI + docker 可以实现自动化，但是办公网环境的部署则需要将镜像 <code>docker push</code> 出来，进行手动部署。出于工作环境的限制，暂时这一步骤就考虑手动进行了。</p><p>环境的配置目前采用 dot 文件 + Dockerfile 参数实现，也可以在后期进行更自由的定制。</p><p>其余就是基础的 CRUD + 单元测试了，也是借此机会简单的熟悉了服务端研发的入门。</p><p>对了，有关鉴权 <code>token</code> 的生成，以及一些加解密算法，后续可以深入研究一下。</p><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><p>再来就是这个月负责了老低代码平台的性能优化问题，因为原有的业务还在持续交付，但是在交付环境的表现并不是特别的理想。</p><p>在部分情况下会出现卡顿，或者长时间运行后会卡顿的现象。</p><p>经过对交付项目的观察，也是发现了确实存在内存泄露的问题。</p><p>从而对老低代码平台进行性能排查，从平台侧、组件侧、框架侧（Vue 2.6、组件库）其实都能看到一些内存泄露的问题。</p><p>比较简单击破的其实是组件侧，虽然组件量大，但是代码逻辑相对较为简单，内存泄露的原因也比较好找，大多是闭包产生的内存泄露问题，其次就是全局变量、事件监听、监听对象外泄、意外报错等问题。</p><p>平台侧则较为复杂一些，需要了解分析平台渲染的运行时逻辑才能击破，检查平台自身、引用组件时、操作组件生命周期时产生不当的副作用或者未及时释放关联关系产生的内存泄露问题。</p><p>也存在着一些双向链表解除单边引起的内存泄露问题以及一些业务逻辑执行顺序不合理的地方。</p><p>再一个就是因为交付场景是在 Electron 里运行的，是不是可以使用 Electron 来进行定期手动 GC 释放，当然这个思路还没有尝试过。</p>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://zongzi531.com/categories/Blog/"/>
    
    
    <category term="Blog" scheme="https://zongzi531.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>鸽子王</title>
    <link href="https://zongzi531.com/2023/10/07/%E9%B8%BD%E5%AD%90%E7%8E%8B/"/>
    <id>https://zongzi531.com/2023/10/07/%E9%B8%BD%E5%AD%90%E7%8E%8B/</id>
    <published>2023-10-07T07:30:33.000Z</published>
    <updated>2023-10-07T07:30:33.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><p>「消消乐」的开发进度可以说是堪比龟速，主打一个慢，咕咕咕～</p><p>最近阅读了一下比较火的 Bun 的文档，当然还没读完。</p><p>和老婆一起做了几次提拉米苏，挺有趣的。</p><p>还干嘛了？</p><p>《异人之下》好看的呀批，推荐！</p><p>话说经过这个夏天，厨艺变强了一点……</p><p>再就是国庆去日本玩了趟～嘿嘿，开心～</p><p>水完了……</p>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://zongzi531.com/categories/Blog/"/>
    
    
    <category term="Blog" scheme="https://zongzi531.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>思考性能优化</title>
    <link href="https://zongzi531.com/2023/09/01/%E6%80%9D%E8%80%83%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    <id>https://zongzi531.com/2023/09/01/%E6%80%9D%E8%80%83%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</id>
    <published>2023-09-01T08:52:51.000Z</published>
    <updated>2023-09-01T08:52:51.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><p>其实最近也是受到了一些文章的启发，所以文章的标题会取这个，也比较怪异吧。</p><p>说起来前端的性能优化其实就是从资源入手，从浏览器运行时入手。</p><p>当然了，如果网络层面也算的话，也可以从网络层面入手。</p><h1 id="资源优化"><a href="#资源优化" class="headerlink" title="资源优化"></a>资源优化</h1><p>比如对从项目业务的角度出发，分析编译代码，拆分业务场景时需要用到的代码，移除不必要的模块，本质是分析无用代码，并剔除。</p><p>同样的，可以抽离减少各模块中的公共依赖模块。</p><p>比如对用户上传的资源进行相应的压缩缓存，用户读取时加快页面的加载速度，减轻服务器的负担。</p><p>比如服务端接口的必要合并、网络请求的缓存以及服务间通信使用 gRPC 。</p><h1 id="运行时优化"><a href="#运行时优化" class="headerlink" title="运行时优化"></a>运行时优化</h1><p>比如将一些包含大量计算的逻辑交由 WebWorker 来执行，虽然说线程通信也同样存在着性能的开销，但是比起大量计算的逻辑来说，这些开销似乎也不算什么。</p><p>比如通过对页面渲染任务进行拆分，以保证重要的内容优先渲染的优化逻辑，从用户体验的角度来说会是一个不错的选择，但是会产生额外的渲染任务调度拆分的开销。</p><p>从火焰图其实也可以排查出业务中存在的不必要的 JS 执行时间，对应的将其进行优化，并且可以减少不必要的重新渲染页面逻辑。</p><p>在一些交互高频的操作场景下，可以考虑使用原生语法代替框架带来的性能损耗。</p><h1 id="无止境的优化"><a href="#无止境的优化" class="headerlink" title="无止境的优化"></a>无止境的优化</h1><p>其实让我比较纠结的就是，优化这件事件总是针对当下，而代码设计也总是针对未来，但是在团队开发的环境中，怎样可以避免因为业务迭代产生的优化失效？</p><p>如果说是需要通过人工的方式来持续的做这件事情的话，未免也太无止境了，会让人崩溃。</p><p>就算掌握了这些技巧，针对当前的版本来说是最优解，但是产品肯定会一直的迭代，而优化如何能够轻松的跟上迭代的步伐呢？</p><p>这是一个引人思考的问题，我也暂时还没解出来……</p>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="优化" scheme="https://zongzi531.com/categories/%E4%BC%98%E5%8C%96/"/>
    
    
    <category term="性能优化" scheme="https://zongzi531.com/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
    <category term="优化" scheme="https://zongzi531.com/tags/%E4%BC%98%E5%8C%96/"/>
    
    <category term="性能" scheme="https://zongzi531.com/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>git多合一</title>
    <link href="https://zongzi531.com/2023/08/01/git%E5%A4%9A%E5%90%88%E4%B8%80/"/>
    <id>https://zongzi531.com/2023/08/01/git%E5%A4%9A%E5%90%88%E4%B8%80/</id>
    <published>2023-08-01T09:09:25.000Z</published>
    <updated>2023-08-01T09:09:25.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><p>我们都会遇到分支 Feature 合并的协作场景吧，接下来我将总结一个。</p><p>假设我们在某个 Feature 分支提交了许多 commit 信息，我们需要将近期研发的 Feature 合并至主分支，或者将近期的某部分 Feature 合并至主分支。</p><p>操作这个的前提是，需要团队养成平时研发时保持良好的纯净的 commit 信息习惯，我们只做 git 操作。</p><p>首先我们需要操作 <code>git rebase -i</code> 指令，将需要合并的 Feature 合成一条 commit 记录。</p><p>操作后，可能会变成 <code>Detached HEAD</code> commit 记录，需要执行 <code>git branch [branch-name] [commit id]</code> 以创建新的分支。</p><p>在此之后，我们需要修改此条 commit 记录的时间，可以执行 <code>date -R</code> 取得当前时间，如 <code>Tue, 01 Aug 2023 09:15:01 +0800</code> 。</p><p>然后通过 <code>git commit --amend --date=&quot;Tue, 01 Aug 2023 09:15:01 +0800&quot;</code> 命令修改提交时间。</p><p>记住此条 commit 的 hash 值后回到主分支操作 <code>git cherry-pick</code> 命令（如果有冲突请自行本地处理）。</p><blockquote><p>如果额外产生了一条 merge 信息，请尝试使用 <code>git cherry-pick -m</code> 进行解决。</p></blockquote><p>待操作完成后，可以将操作过程中产生的额外本地分支移除，或是同步删除远端 Feature 。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#删除本地分支</span><span class="token function">git</span> branch <span class="token parameter variable">-d</span> <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span><span class="token comment">#删除远程分支</span><span class="token function">git</span> push origin <span class="token parameter variable">--delete</span> <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那么，现在就实现了分支 Feature 合并到主分支的纯净操作。</p><p>分支多条 commit 合一后，同步到主分支为一次 commit。</p>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Git" scheme="https://zongzi531.com/categories/Git/"/>
    
    
    <category term="Git" scheme="https://zongzi531.com/tags/Git/"/>
    
    <category term="git" scheme="https://zongzi531.com/tags/git/"/>
    
    <category term="rebase" scheme="https://zongzi531.com/tags/rebase/"/>
    
    <category term="commit" scheme="https://zongzi531.com/tags/commit/"/>
    
    <category term="cherry-pick" scheme="https://zongzi531.com/tags/cherry-pick/"/>
    
  </entry>
  
  <entry>
    <title>试着做一个「消消乐」吧</title>
    <link href="https://zongzi531.com/2023/07/03/%E8%AF%95%E7%9D%80%E5%81%9A%E4%B8%80%E4%B8%AA%E6%B6%88%E6%B6%88%E4%B9%90%E5%90%A7/"/>
    <id>https://zongzi531.com/2023/07/03/%E8%AF%95%E7%9D%80%E5%81%9A%E4%B8%80%E4%B8%AA%E6%B6%88%E6%B6%88%E4%B9%90%E5%90%A7/</id>
    <published>2023-07-03T18:01:23.000Z</published>
    <updated>2023-07-03T18:01:23.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><p>这个月很高兴老婆抢到了五月天的演唱会门票，又去 High 了一把，真爽！</p><p>可是后半个月我却因为吃坏肚子，休息了好几天……</p><p>始终是怀疑是盒马的冷冻烤翅因为我没烤熟吃坏了肚子，非常难受……</p><p>生病使我更加的确信，健康的重要以及老婆的重要！</p><h2 id="碧蓝航线"><a href="#碧蓝航线" class="headerlink" title="碧蓝航线"></a>碧蓝航线</h2><p>陪伴了我好几年的黄油，决定退坑了！也愿碧蓝航线可以蒸蒸日上！</p><h2 id="任务进度"><a href="#任务进度" class="headerlink" title="任务进度"></a>任务进度</h2><ul><li><em><strong>「日本語学習計画」</strong>：语法及词汇 <strong>第1页</strong></em></li><li><em><strong>「计算机图形学」</strong>：材质与外观</em></li><li><strong>「锻炼身体」</strong>：步行、上楼梯、Just Dance、健身环、刘畊宏直播 <strong>待加强</strong></li><li><em><strong>「ECMA-262」</strong>：6.2.4 The Reference Specification Type</em></li><li><strong>「Rust语言圣经(Rust教程 Rust Course)」</strong>：11.5.1. 数据布局和基本操作</li><li><strong>「Rust By Practice( Rust 练习实践 )」</strong>：17.3. 深入生命周期</li><li><strong>「The <code>wasm-bindgen</code> Guide」</strong>：1.10. web-sys: Closures</li><li><strong>「Rust 秘典（死灵书）」</strong>：3.1. 引用</li><li><del><strong>「Machine Learning 2022 Spring」</strong>：Lecture 15:Meta Learning</del></li></ul><h2 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h2><p>来谈谈机器学习吧，学习完机器学习的课程，可以说只学了几根鸡毛，因为没有「环境」的关系，所以其实没办法真正涉猎到这个领域去，只是希望自己可以通过这次学习简单的认识到一些有关机器学习的内容，或许可以在将来，在其他的领域把这些概念融会贯通应用起来。</p><h2 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h2><p>Unity 在这个月也完成了基础课程的学习，对基础的界面有了浅显的认识，也学习了一个消消乐的课程，课程中提供的游戏模式有时间模式、障碍模式、剩余次数模式，还是比较经典的。</p><p>我想经过学习后，通过自己的理解（绝对不抄），实现一款消消乐的游戏。</p><p>我计划只先实现一个时间奖励模式，计划在国庆节前能完成。</p><p>话说回来，我去查了一下，如果上架苹果商店或者 Steam 商店是要交一笔费用的，想想还是算了，毕竟自己啥也不是。</p><p>再来就是这个消消乐的 UI 设计了，我打算使用 sd 来完成，所以我最近又抓起了 sd 来尝试把玩。</p><p>也希望能够算出让我满意的 UI 了，如果这一步没走通的话，我只能先用一些素的图片来撑场面了。</p><h2 id="低代码"><a href="#低代码" class="headerlink" title="低代码"></a>低代码</h2><p>工作方面还是主要负责低代码相关的研发，低代码调度器、低代码脚手架、低代码运行时性能优化</p>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://zongzi531.com/categories/Blog/"/>
    
    
    <category term="Blog" scheme="https://zongzi531.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>游戏梦</title>
    <link href="https://zongzi531.com/2023/06/01/%E6%B8%B8%E6%88%8F%E6%A2%A6/"/>
    <id>https://zongzi531.com/2023/06/01/%E6%B8%B8%E6%88%8F%E6%A2%A6/</id>
    <published>2023-06-01T08:20:55.000Z</published>
    <updated>2023-06-01T08:20:55.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><p>AI 的热度从我这里开始降低了，一是能做的事情确实很少，只能尝试些末端的产物，比如说生图。</p><p>不过生图这块领域还得去玩一下训练，这毕竟和游戏梦有着关联。</p><p>机器学习学习起来的感觉就是，道理都听得懂，但是没法实践，受到了设备的限制吧算是，当然我只听了一些理论，到实践确实还是有很大距离的。</p><p>AI 先说到这里，为什么这次想说游戏梦。</p><p>其实，应该来说喜欢玩游戏的人，一定有着自己做游戏的想法，假如自己能做出一款游戏，不会觉得很酷嘛！</p><p>如果说自己做的游戏有人玩，并且玩的开心，自己也会非常开心！</p><p>到现在前端也做了 6 年之久了，虽然现在会的一些东西已经超出了前端范畴，但是仍然会觉得处在瓶颈期。</p><p>也虽然本意上就不希望自己过度工作，而是把自己的时间更多聚焦在生活。</p><p>说了这么多废话，我想表达什么呢？</p><p>我觉得现在机会出现了，因为工作出现 Unity 的关系，有大佬和我分享游戏相关的内容时，并且 AI 在未来能协助我的时候，我认为我需要开始学习游戏制作，尝试着梦想成真！</p><p>我也不介意我跳出前端这个圈子，我认为软件开发，语言只是达到目的的工具，而思想才是能够让自己更上一层楼的宝贵核心。</p><p>所以，我想制作游戏，我想让人玩我做的游戏！</p><p>光是想想就觉得很酷！鸡皮疙瘩起来了！</p><h2 id="任务进度"><a href="#任务进度" class="headerlink" title="任务进度"></a>任务进度</h2><ul><li><em><strong>「日本語学習計画」</strong>：语法及词汇 <strong>第1页</strong></em></li><li><em><strong>「计算机图形学」</strong>：材质与外观</em></li><li><strong>「锻炼身体」</strong>：步行、上楼梯、Just Dance、健身环、刘畊宏直播 <strong>待加强</strong></li><li><em><strong>「ECMA-262」</strong>：6.2.4 The Reference Specification Type</em></li><li><strong>「Rust语言圣经(Rust教程 Rust Course)」</strong>：11.5.1. 数据布局和基本操作</li><li><strong>「Rust By Practice( Rust 练习实践 )」</strong>：17.3. 深入生命周期</li><li><strong>「The <code>wasm-bindgen</code> Guide」</strong>：1.10. web-sys: Closures</li><li><strong>「Rust 秘典（死灵书）」</strong>：3.1. 引用</li><li><strong>「Machine Learning 2022 Spring」</strong>：Lecture 12:Reinforcement Learning</li></ul><p>工作方面仍然在参与云渲染、低代码建设（脚手架、开放式调度器）</p>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://zongzi531.com/categories/Blog/"/>
    
    
    <category term="Blog" scheme="https://zongzi531.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>初识机器学习</title>
    <link href="https://zongzi531.com/2023/05/04/%E5%88%9D%E8%AF%86%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    <id>https://zongzi531.com/2023/05/04/%E5%88%9D%E8%AF%86%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</id>
    <published>2023-05-04T13:43:48.000Z</published>
    <updated>2023-05-04T13:43:48.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><p>很明显， AI 一定会改变我们的生活方式、工作方式，并且是危险的。</p><p>因为从目前来看，需要 Web3 得到进一步发展，并且成为基础设施后， AI 才会相对变得不那么危险。</p><p>当然，我这里指的危险并不是 AI 自己的演化，而是某些企业基于 AI 的能力来深度定制千人千面。</p><p>毕竟目前处于 Web2 阶段，形成这样的局面很危险。</p><p>就像是「火影忍者」里的「无限月读」幻术一样，“让世上的人们沈浸在美好中，以此来结束世间的痛苦与战乱。”</p><h2 id="任务进度"><a href="#任务进度" class="headerlink" title="任务进度"></a>任务进度</h2><ul><li><em><strong>「日本語学習計画」</strong>：语法及词汇 <strong>第1页</strong></em></li><li><em><strong>「计算机图形学」</strong>：材质与外观</em></li><li><strong>「锻炼身体」</strong>：步行、上楼梯、Just Dance、健身环、刘畊宏直播 <strong>待加强</strong></li><li><em><strong>「ECMA-262」</strong>：6.2.4 The Reference Specification Type</em></li><li><strong>「Rust语言圣经(Rust教程 Rust Course)」</strong>：11.5.1. 数据布局和基本操作</li><li><strong>「Rust By Practice( Rust 练习实践 )」</strong>：17.3. 深入生命周期</li><li><strong>「The <code>wasm-bindgen</code> Guide」</strong>：1.10. web-sys: Closures</li><li><strong>「Rust 秘典（死灵书）」</strong>：3.1. 引用</li><li><strong>「Machine Learning 2022 Spring」</strong>：Lecture 8:Auto-encoder&#x2F; Anomaly Detection</li></ul><h2 id="stable-diffusion-安装指南"><a href="#stable-diffusion-安装指南" class="headerlink" title="stable-diffusion 安装指南"></a>stable-diffusion 安装指南</h2><p>当然不是复制官网的内容，也是借着可以在公司使用 RTX4090 的机会，在公司部署 stable-diffusion 。</p><p>受到网络的影响，所以总结一些其他安装思路。</p><p>但凡是安装出现问题，多数情况都是因为网络的影响所产生的，所以你懂的，根本的解决思路就是解决网络问题。</p><h3 id="安装-torch-1-13-1-cu117-cp310-cp310-win-amd64-whl-缓慢或者容易中断"><a href="#安装-torch-1-13-1-cu117-cp310-cp310-win-amd64-whl-缓慢或者容易中断" class="headerlink" title="安装 torch-1.13.1+cu117-cp310-cp310-win_amd64.whl 缓慢或者容易中断"></a>安装 torch-1.13.1+cu117-cp310-cp310-win_amd64.whl 缓慢或者容易中断</h3><p>可以使用其他下载工具把这个文件单独下载下来，然后进行手动安装。</p><p>需要注意的是，这里需要使用 <code>venv</code> 下的 <code>pip</code> 进行安装，可以尝试输入命令进行安装即可：</p><blockquote><p><a href="https://download.pytorch.org/whl/">https://download.pytorch.org/whl/</a> 这个地址下载起来确实有点吃力</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">.<span class="token punctuation">\</span>venv<span class="token punctuation">\</span>Scripts<span class="token punctuation">\</span>pip.exe <span class="token function">install</span> .<span class="token punctuation">\</span>torch-1.13.1+cu117-cp310-cp310-win_amd64.whl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="git-仓库拉取慢"><a href="#git-仓库拉取慢" class="headerlink" title="git 仓库拉取慢"></a>git 仓库拉取慢</h3><p>没什么特别的点，自行前往 Github 下载压缩包解压放到指定目录即可。</p><h3 id="其他安装报错"><a href="#其他安装报错" class="headerlink" title="其他安装报错"></a>其他安装报错</h3><p>如果遇到了如下提示内容，按照提示单独下载安装即可：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">stdout: Microsoft Visual C++ Redistributable is not installed, this may lead to the DLL load failure.It can be downloaded at https://aka.ms/vs/16/release/vc_redist.x64.exe<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Auto-GPT-安装指南"><a href="#Auto-GPT-安装指南" class="headerlink" title="Auto GPT 安装指南"></a>Auto GPT 安装指南</h2><p>也是比较扯，MacOS 里面自带了 Python 2.x ，导致需要手动区分使用。</p><p>首先你需要安装 Python 3.x 并且安装 <code>pip3</code> 。</p><p>将官方安装教程的 <code>pip</code> 修改成 <code>pip3</code> 来完成安装流程。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># pip install -r requirements.txt</span>pip3 <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>比较奇怪的是，我运行会报错，所以我运行 <code>main.py</code> 来启动程序。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># python -m autogpt</span>python3 <span class="token parameter variable">-m</span> autogptpython3 scripts/main.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="混合云渲染"><a href="#混合云渲染" class="headerlink" title="混合云渲染"></a>混合云渲染</h2><p>只是依次尝试了 WebRTC 、Electron 和 Tauri 三个技术，没什么特别好说的，只是记录一下。</p>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://zongzi531.com/categories/Blog/"/>
    
    
    <category term="Blog" scheme="https://zongzi531.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>通过机器学习释放生产力</title>
    <link href="https://zongzi531.com/2023/04/01/%E9%80%9A%E8%BF%87%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%87%8A%E6%94%BE%E7%94%9F%E4%BA%A7%E5%8A%9B/"/>
    <id>https://zongzi531.com/2023/04/01/%E9%80%9A%E8%BF%87%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%87%8A%E6%94%BE%E7%94%9F%E4%BA%A7%E5%8A%9B/</id>
    <published>2023-04-01T16:42:34.000Z</published>
    <updated>2023-04-01T16:42:34.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><p>最近一段时间网络上几乎任何地方都充斥着 AI 和人工智能的话题，也因为 ChatGPT 让我们思考，人工智能真的迎来了一个新的时代，虽然说自己只是一个切图仔，但是看到 ChatGPT 与传统搜索引擎的巨大差距，也感受到了自己所处的行业的危机感。</p><p>从某些角度来说，自己其实早就已经跳出了前端开发的工作岗位，虽然说目前的 Title 是前端开发，但是已经慢慢的从思想上开始变为从全局出发。</p><p>让我特别感兴趣的其实并不是 ChatGPT ，虽然 ChatGPT 的回答方式不是像搜索引擎那样的返回，但是我的兴趣点还是在 stable-diffusion 上。</p><p>其实不难发现，在未来，人工智能一定能辅助人类，释放更多生产力，一样的卷，人们要掌握的基本是利用人工智能工具来加速完成工作或事。</p><p>更多的人会使用 Prompt ，也为此，我计划着学习机器学习的课程，我希望自己可以知道机器学习、人工智能、神经网络的原理。</p><p>希望有机会可以在这个位置进行发力，做更有趣的事情。</p><p>互联网火起来的时候，人们都俗称「互联网+」，那么未来很有可能出现「AI+」。</p><h2 id="任务进度"><a href="#任务进度" class="headerlink" title="任务进度"></a>任务进度</h2><ul><li><em><strong>「日本語学習計画」</strong>：语法及词汇 <strong>第1页</strong></em></li><li><em><strong>「计算机图形学」</strong>：材质与外观</em></li><li><strong>「锻炼身体」</strong>：步行、上楼梯、Just Dance、健身环、刘畊宏直播 <strong>待加强</strong></li><li><em><strong>「ECMA-262」</strong>：6.2.4 The Reference Specification Type</em></li><li><strong>「Rust语言圣经(Rust教程 Rust Course)」</strong>：11.5.1. 数据布局和基本操作</li><li><strong>「Rust By Practice( Rust 练习实践 )」</strong>：17.3. 深入生命周期</li><li><strong>「The <code>wasm-bindgen</code> Guide」</strong>：1.10. web-sys: Closures</li><li><strong>「Rust 秘典（死灵书）」</strong>：3.1. 引用</li><li><strong>「Machine Learning 2022 Spring」</strong>：Lecture 1:Introduction of Deep Learning</li></ul><p>其实从任务进度来看也好，从年度规划来看也好，会发现我除了本身需要拓展的语言如日语、 Rust 之外，我还需要掌握机器学习相关的知识。</p><p>业务侧继续延伸低代码，也其实可以联想到「AI+LowCode」的交付场景。</p><p>虽然说想学习的内容越来越多了，但是毕竟精力有限，也不希望越来越卷。</p><p>或许在搞懂机器学习等技术后，语言的学习会成为必要的内容，而业务侧的概念只需要持续迭代精进即可吧。</p><p>对了，语言方面可能还需要简单学习 Python 。也是没想到要学的东西越来越多，也越来越卷。</p><h2 id="stable-diffusion"><a href="#stable-diffusion" class="headerlink" title="stable-diffusion"></a>stable-diffusion</h2><p>我对 AI 的兴趣点一定是始于图。生成妹纸！</p><blockquote><p>这是我第一张生成的图片</p></blockquote><div style="display: grid; grid-template-columns: 1fr 1fr 1fr; grid-gap: 16px; margin: 16px;">  <img src="pic1.png"></div><blockquote><p>这是我第二次生成的效果比较理想的图片，通过复制关键词在本地实现的效果还不错</p></blockquote><div style="display: grid; grid-template-columns: 1fr 1fr 1fr; grid-gap: 16px; margin: 16px;">  <img src="pic2.png">  <img src="pic3.png"></div><blockquote><p>这是我第一次尝试生成 JK</p></blockquote><div style="display: grid; grid-template-columns: 1fr 1fr 1fr; grid-gap: 16px; margin: 16px;">  <img src="pic4.png"></div><blockquote><p>这时候我学会了如何使用 lora 生成韩国脸妹纸</p></blockquote><div style="display: grid; grid-template-columns: 1fr 1fr 1fr; grid-gap: 16px; margin: 16px;">  <img src="pic5.png">  <img style="display: none;" src="pic6.png">  <img src="pic7.png">  <img src="pic8.png">  <img src="pic9.png">  <img src="pic10.png">  <img src="pic11.png">  <img src="pic12.png">  <img src="pic18.png">  <img src="pic19.png">  <img src="pic20.png">  <img src="pic21.png">  <img src="pic22.png">  <img src="pic23.png"></div><blockquote><p>这一批是我通过 ControlNet 实现的换装吧算是，同一个动作</p></blockquote><div style="display: grid; grid-template-columns: 1fr 1fr 1fr; grid-gap: 16px; margin: 16px;">  <img src="pic13.png">  <img src="pic14.png">  <img src="pic15.png">  <img src="pic16.png">  <img src="pic17.png"></div><p>我深陷在生成妹纸中……</p><p>振作！</p><p>但是我需要学习更多的是如何去生成建筑设计图、人物原型图等等，以及如何训练自己的模型。</p><p>掌握这些知识后，我就有希望可以自己独自完成游戏的开发，至于是什么类型的游戏虽然我现在还没有思路，但是我想借助 AI 的力量独自完成一款游戏的开发。</p><p>毕竟能开发出游戏，那是多么自豪的事情啊！</p><h2 id="Unity"><a href="#Unity" class="headerlink" title="Unity"></a>Unity</h2><p>其实在做大屏类的项目来说，也很容易发现，客户端的性能瓶颈，在当下那么多 3D 模型的场景下非常吃客户端的性能，于是正在探索云渲染技术的落地。</p><p>在开发过程中，其实已经同时担任了服务端、SDK的开发角色，同时负责于 Unity 同学进行通信等落地工作。</p><p>也算是比较有趣的一项内容。可以接触到 Signaling 、 WebRTC 、 DTLS 等信息。</p>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://zongzi531.com/categories/Blog/"/>
    
    
    <category term="Blog" scheme="https://zongzi531.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>压力即机会</title>
    <link href="https://zongzi531.com/2023/03/01/%E5%8E%8B%E5%8A%9B%E5%8D%B3%E6%9C%BA%E4%BC%9A/"/>
    <id>https://zongzi531.com/2023/03/01/%E5%8E%8B%E5%8A%9B%E5%8D%B3%E6%9C%BA%E4%BC%9A/</id>
    <published>2023-03-01T15:03:35.000Z</published>
    <updated>2023-03-01T15:03:35.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><p>怎么说呢，最近半年是真的忙，压力也真实存在，有好有坏吧。</p><p>不说这个了，因为也改变不了环境，或许跳出环境，或许适应环境。</p><p>一看上面的话就充满了无奈，当然也有好的地方。</p><p>一是低代码引擎持续迭代，并且已经孵化了第三款应用，基于原有的自由布局模式和流式布局模式外，孵化了网格布局模式。</p><p>二是升级了原低代码组件开发脚手架，规范了协议、加载模式等内容。并且使用 Vite 等新前端技术来实现，可以说相比旧 Webpack 来说，体验大有提升。</p><p>不过 Vite 的非全量编译在第一次访问页面时会显得较为缓慢，不知道有没有可以优化的空间，后面有时间再看吧。</p><p>三是下班时间自己倒腾了一下 stable-diffusion ，确实乐趣无穷，目前来说已经在 Windows 和 MacOS 上尝试了安装和运行，虽然说官方有教程，不过第一次尝试过程中真的是频繁报错。</p><p>后续我也想是整理一个 stable-diffusion 安装、使用的简单教程，当然了，现在网上已经有很多教程，我想再深入学习一下。</p><p><img src="/2023/03/01/%E5%8E%8B%E5%8A%9B%E5%8D%B3%E6%9C%BA%E4%BC%9A/pic2.png"></p><p>四是因为工作原因接触到 Unity 技术以及相关渲染技术，因为工作原因暂时不多做介绍。</p><p>噢对了，月初部门组织团建，观影《流浪地球2》，讲道理这个爆米花和可乐是真的爽。</p><p>可见，未来科技确实会成为人类的好帮手～</p><p>没了，说完了，像是流水账。</p>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://zongzi531.com/categories/Blog/"/>
    
    
    <category term="Blog" scheme="https://zongzi531.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>兔飞猛进</title>
    <link href="https://zongzi531.com/2023/02/01/%E5%85%94%E9%A3%9E%E7%8C%9B%E8%BF%9B/"/>
    <id>https://zongzi531.com/2023/02/01/%E5%85%94%E9%A3%9E%E7%8C%9B%E8%BF%9B/</id>
    <published>2023-02-01T08:25:32.000Z</published>
    <updated>2023-02-01T08:25:32.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><p>回顾这一年，团队独立，新成员加入，完整规模的人员扩充，确实给我带来了不一样的体验。</p><blockquote><p>「逃走只会得到一样东西，前进的话就能得到两样东西」 ———— 機動戦士ガンダム 水星の魔女</p></blockquote><p>讲实话，这一年比前几年都要忙，因为团队的独立面临的压力都在我们身上，不会像之前那样有太多的时间学习技术，更多的是深入到业务层面做。</p><p>有幸的是，能被选择进入低代码这条赛道，能够有机会参与到产品设计中，有机会体会从 0 开始的过程，希望可以到达 1 ，也希望今年可以在业务层面取得不错的成绩。</p><p>虽然说技术的提升都来自于业务，但是我总是很贪心，总是希望像以前这样获得更多的技术。不过，抛开以前的想法，我也希望从现状中探索出更好的技术提升的方式，不仅能够在业务中深入，产品设计中深入，也能从中找到不错的技术提升方式，并且因为销售团队的加入，我也希望从销售方面学习些知识。</p><p>性能优化这块工作，我渴望接触更多。</p><p>关于副业，我只能说还在探索中，希望这份危机感一直伴随着我，我能够有所准备，以应对变化。</p><h1 id="基础建设"><a href="#基础建设" class="headerlink" title="基础建设"></a>基础建设</h1><ul><li>低代码引擎</li><li><a href="https://github.com/zongzi531/random-wasm">@zong&#x2F;random-wasm</a></li><li><a href="https://github.com/zongzi531/js.macro">@zong&#x2F;js.macro</a></li></ul><h1 id="技术分享"><a href="#技术分享" class="headerlink" title="技术分享"></a>技术分享</h1><ul><li>《当前端把手伸向后端，做起全栈时》</li><li>《实现自己的 JavaScript 宏》</li><li>《初探 Rust》</li></ul><h1 id="开源贡献"><a href="#开源贡献" class="headerlink" title="开源贡献"></a>开源贡献</h1><ul><li><p><a href="https://github.com/sunface/rust-course">sunface&#x2F;rust-course</a> <a href="https://github.com/sunface/rust-course/pull/387">#387</a> <a href="https://github.com/sunface/rust-course/pull/389">#389</a> <a href="https://github.com/sunface/rust-course/pull/394">#394</a> <a href="https://github.com/sunface/rust-course/pull/400">#400</a> <a href="https://github.com/sunface/rust-course/pull/401">#401</a> <a href="https://github.com/sunface/rust-course/pull/427">#427</a> <a href="https://github.com/sunface/rust-course/pull/429">#429</a> <a href="https://github.com/sunface/rust-course/pull/435">#435</a> <a href="https://github.com/sunface/rust-course/pull/471">#471</a> <a href="https://github.com/sunface/rust-course/pull/492">#492</a> <a href="https://github.com/sunface/rust-course/pull/514">#514</a> <a href="https://github.com/sunface/rust-course/pull/515">#515</a> <a href="https://github.com/sunface/rust-course/pull/516">#516</a> <a href="https://github.com/sunface/rust-course/pull/537">#537</a> <a href="https://github.com/sunface/rust-course/pull/548">#548</a> <a href="https://github.com/sunface/rust-course/pull/569">#569</a> <a href="https://github.com/sunface/rust-course/pull/570">#570</a> <a href="https://github.com/sunface/rust-course/pull/572">#572</a> <a href="https://github.com/sunface/rust-course/pull/575">#575</a> <a href="https://github.com/sunface/rust-course/pull/593">#593</a> <a href="https://github.com/sunface/rust-course/pull/602">#602</a> <a href="https://github.com/sunface/rust-course/pull/603">#603</a> <a href="https://github.com/sunface/rust-course/pull/643">#643</a> <a href="https://github.com/sunface/rust-course/pull/668">#668</a> <a href="https://github.com/sunface/rust-course/pull/670">#670</a> <a href="https://github.com/sunface/rust-course/pull/677">#677</a> <a href="https://github.com/sunface/rust-course/pull/688">#688</a> <a href="https://github.com/sunface/rust-course/pull/696">#696</a> <a href="https://github.com/sunface/rust-course/pull/697">#697</a> <a href="https://github.com/sunface/rust-course/pull/698">#698</a> <a href="https://github.com/sunface/rust-course/pull/699">#699</a> <a href="https://github.com/sunface/rust-course/pull/738">#738</a> <a href="https://github.com/sunface/rust-course/pull/787">#787</a> <a href="https://github.com/sunface/rust-course/pull/794">#794</a> <a href="https://github.com/sunface/rust-course/pull/804">#804</a> <a href="https://github.com/sunface/rust-course/pull/808">#808</a> <a href="https://github.com/sunface/rust-course/pull/815">#815</a> <a href="https://github.com/sunface/rust-course/pull/817">#817</a> <a href="https://github.com/sunface/rust-course/pull/820">#820</a> <a href="https://github.com/sunface/rust-course/pull/823">#823</a> <a href="https://github.com/sunface/rust-course/pull/829">#829</a> <a href="https://github.com/sunface/rust-course/pull/834">#834</a> <a href="https://github.com/sunface/rust-course/pull/842">#842</a> <a href="https://github.com/sunface/rust-course/pull/847">#847</a> <a href="https://github.com/sunface/rust-course/pull/861">#861</a> <a href="https://github.com/sunface/rust-course/pull/865">#865</a> <a href="https://github.com/sunface/rust-course/pull/868">#868</a> <a href="https://github.com/sunface/rust-course/pull/869">#869</a> <a href="https://github.com/sunface/rust-course/pull/928">#928</a></p></li><li><p><a href="https://github.com/element-plus/element-plus">element-plus&#x2F;element-plus</a> <a href="https://github.com/element-plus/element-plus/pull/6186">#6186</a></p></li><li><p><a href="https://github.com/antfu/case-police">antfu&#x2F;case-police</a> <a href="https://github.com/antfu/case-police/pull/107">#107</a></p></li><li><p><a href="https://github.com/sunface/rust-by-practice">sunface&#x2F;rust-by-practice</a> <a href="https://github.com/sunface/rust-by-practice/pull/209">#209</a> <a href="https://github.com/sunface/rust-by-practice/pull/257">#257</a> <a href="https://github.com/sunface/rust-by-practice/pull/296">#296</a> <a href="https://github.com/sunface/rust-by-practice/pull/297">#297</a> <a href="https://github.com/sunface/rust-by-practice/pull/298">#298</a></p></li><li><p><a href="https://github.com/ourairyu/persona">ourairyu&#x2F;persona</a> <a href="https://github.com/ourairyu/persona/pull/2">#2</a></p></li><li><p><a href="https://github.com/socketio/engine.io-client">socketio&#x2F;engine.io-client</a> <a href="https://github.com/socketio/engine.io-client/pull/699">#699</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://zongzi531.com/categories/Blog/"/>
    
    
    <category term="Blog" scheme="https://zongzi531.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>Chrome 浏览器性能排查指南</title>
    <link href="https://zongzi531.com/2023/01/12/chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E6%80%A7%E8%83%BD%E6%8E%92%E6%9F%A5%E6%8C%87%E5%8D%97/"/>
    <id>https://zongzi531.com/2023/01/12/chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E6%80%A7%E8%83%BD%E6%8E%92%E6%9F%A5%E6%8C%87%E5%8D%97/</id>
    <published>2023-01-12T13:45:21.000Z</published>
    <updated>2023-01-12T13:45:21.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><h1 id="使用-Chrome-DevTools-Memory-排查问题"><a href="#使用-Chrome-DevTools-Memory-排查问题" class="headerlink" title="使用 Chrome DevTools Memory 排查问题"></a>使用 Chrome DevTools Memory 排查问题</h1><ol><li><p>打开 Chrome DevTools 选择「Memory」选项卡，可以现在 JavaScript VM instance 下实时观察 JavaScript 的内存变化。</p></li><li><p>那么我们结合 Chrome 任务管理器配合进行排查内存变化，通常浏览器会在空闲时间进行 GC 操作，如果存在内存泄露的话，可以从几次 GC 操作后发现内存是有上升，如果一直攀升并未得到正常下降的话，我们需要有规律的打印堆快照，并进行对比。</p></li><li><p>我们默认选择「Heap snapshot」打印堆快照，尝试打印 2-3 次 GC 操作后的堆快照信息，并选择「Comparison」与上一份快照或者其他快照进行比对，从中排查问题。</p></li><li><p>可以通过 #New 列和 #Deleted 列观察内存创建和销毁的数量，按照 #Delta 列进行降序排序，观察堆快照的使用情况从中排查问题。</p></li></ol><h1 id="常见案例"><a href="#常见案例" class="headerlink" title="常见案例"></a>常见案例</h1><h2 id="1-发现-closure-出现问题"><a href="#1-发现-closure-出现问题" class="headerlink" title="1. 发现 (closure) 出现问题"></a>1. 发现 (closure) 出现问题</h2><ol><li><p>比如轮询回调函数，未在调用结束后释放；</p></li><li><p>重复的事件监听，未释放过期的事件监听；</p></li><li><p>模块文件内容临时变量存储未被清理；</p></li></ol><h2 id="2-发现-array-出现问题"><a href="#2-发现-array-出现问题" class="headerlink" title="2. 发现 (array) 出现问题"></a>2. 发现 (array) 出现问题</h2><ol><li>比如 Vue 下的监听导致数组重复监听；</li></ol><h1 id="使用-Chrome-任务管理器协助排查问题"><a href="#使用-Chrome-任务管理器协助排查问题" class="headerlink" title="使用 Chrome 任务管理器协助排查问题"></a>使用 Chrome 任务管理器协助排查问题</h1><ol><li><p>点击 Chrome 右侧的「自定义及控制 Google Chrome」按钮，选择「更多工具」，打开「任务管理器」。</p></li><li><p>可以右键点击顶部表头对任务管理器表头进行筛选显示，如下图。</p></li></ol><p><img src="/2023/01/12/chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E6%80%A7%E8%83%BD%E6%8E%92%E6%9F%A5%E6%8C%87%E5%8D%97/pic1.png"></p><ol start="3"><li>建议开启「内存占用空间」、「CPU」、「网络」、「GPU内存」、「JavaScript使用的内存」来观察当前 Chrome Tab 标签页的使用情况。</li></ol><h1 id="改善方案"><a href="#改善方案" class="headerlink" title="改善方案"></a>改善方案</h1><ol><li><p>养成良好的编码习惯</p></li><li><p>注重代码审查</p></li><li><p>沉淀最佳实践及排查指南</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Performance" scheme="https://zongzi531.com/categories/Performance/"/>
    
    
    <category term="Chrome" scheme="https://zongzi531.com/tags/Chrome/"/>
    
    <category term="Performance" scheme="https://zongzi531.com/tags/Performance/"/>
    
    <category term="浏览器" scheme="https://zongzi531.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
    <category term="Devtools" scheme="https://zongzi531.com/tags/Devtools/"/>
    
    <category term="性能优化" scheme="https://zongzi531.com/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>２０２３年おめでとうございます</title>
    <link href="https://zongzi531.com/2023/01/01/%EF%BC%92%EF%BC%90%EF%BC%92%EF%BC%93%E5%B9%B4%E3%81%8A%E3%82%81%E3%81%A7%E3%81%A8%E3%81%86%E3%81%94%E3%81%96%E3%81%84%E3%81%BE%E3%81%99/"/>
    <id>https://zongzi531.com/2023/01/01/%EF%BC%92%EF%BC%90%EF%BC%92%EF%BC%93%E5%B9%B4%E3%81%8A%E3%82%81%E3%81%A7%E3%81%A8%E3%81%86%E3%81%94%E3%81%96%E3%81%84%E3%81%BE%E3%81%99/</id>
    <published>2023-01-01T09:31:09.000Z</published>
    <updated>2023-01-01T09:31:09.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><h2 id="想先说的话"><a href="#想先说的话" class="headerlink" title="想先说的话"></a>想先说的话</h2><p>疫情三年，国家保护我们免受新冠病毒的危害。</p><p>12月初，国家开放了，我也很快的感染上了新冠病毒。</p><p>在家和病毒战争的日子可以说是非常煎熬，毫不夸张的说这个病毒很可怕，免疫系统要与这个病毒战争好几个日日夜夜才能获得胜利。</p><p>这不禁让人回想起，三年前的新冠病毒，以及当时的医疗、物资等环境，是多么的困难。</p><p>我们唯有好好的补充、修养我们的身体，才对得起我们自己、我们的家人、我们的国家！</p><p>生命如此脆弱，也是如此渺小，也是如此多姿多彩。</p><p>唯有健康、快乐才能更好的享受生命，尽可能的让生命大放光彩！</p><p>感谢老婆，是老婆一直在我的身边细心照顾我，还有我的家人们、朋友们，在身边鼓励、帮助我！</p><h2 id="简单概要"><a href="#简单概要" class="headerlink" title="简单概要"></a>简单概要</h2><blockquote><p>2022 年，业务支撑（含服务端入门）、低代码领域（协议、引擎、专利、工程化工具、运行时工具）、基础建设、构建性能优化、运行时渲染性能优化、技术分享、学习 Rust。<br>2023 年，深入 Rust、运行时性能优化。</p></blockquote><h2 id="回顾-2022-年"><a href="#回顾-2022-年" class="headerlink" title="回顾 2022 年"></a>回顾 2022 年</h2><ul><li><strong><span class="github-emoji" alias="couplekiss_man_woman" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f469-2764-1f48b-1f468.png?v8">👩️‍❤️‍💋️‍👨</span> 更爱老婆，和她开心幸福在一起</strong></li><li><strong><span class="github-emoji" alias="heartpulse" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f497.png?v8">💗</span> 更爱家人，祝家人身体健康，平平安安</strong></li><li><strong><span class="github-emoji" alias="horse_racing" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c7.png?v8">🏇</span> 锻炼身体</strong> <code>适量</code></li><li><strong><span class="github-emoji" alias="notebook_with_decorative_cover" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d4.png?v8">📔</span> 日本語学習文法・語彙</strong> <code>语法及词汇 第1页</code></li><li><strong><span class="github-emoji" alias="books" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png?v8">📚</span> 建立自己的知识体系</strong> <code>持续进行</code></li><li><strong>学习 Rust</strong></li><li><strong>初探低代码</strong></li></ul><h2 id="展望-2023-年"><a href="#展望-2023-年" class="headerlink" title="展望 2023 年"></a>展望 2023 年</h2><ul><li><strong><span class="github-emoji" alias="couplekiss_man_woman" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f469-2764-1f48b-1f468.png?v8">👩️‍❤️‍💋️‍👨</span> 更爱老婆，和她开心幸福在一起</strong></li><li><strong><span class="github-emoji" alias="heartpulse" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f497.png?v8">💗</span> 更爱家人，祝家人身体健康，平平安安</strong></li><li><strong><span class="github-emoji" alias="horse_racing" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c7.png?v8">🏇</span> 锻炼身体</strong></li><li><strong><span class="github-emoji" alias="notebook_with_decorative_cover" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d4.png?v8">📔</span> 日本語学習文法・語彙</strong></li><li><strong><span class="github-emoji" alias="books" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png?v8">📚</span> 建立自己的知识体系</strong></li><li><strong>深入 Rust</strong></li><li><strong>深入低代码</strong></li></ul><h2 id="展开说说"><a href="#展开说说" class="headerlink" title="展开说说"></a>展开说说</h2><p>首先来说一下当初定下的 35 岁第二目标，目前还在探索中……，加油吧！</p><p>再来就是绩效考核从 OKR 变成了 PBC 的形式，怎么说呢，从目前体验 PBC 的感受下来，感觉没有 OKR 那么激励人，可能是因为 OKR 太过于模糊无法定量考核的可能吧。</p><p>学习 Rust 的时候接触到了宏这个词，也借助 Babel 的力量简单实现了一个 demo ，也是一种不错的尝试。现在看来，其实可以使用这种宏的概念在低代码场景中，类似于 Excel 中的「函数」，可以由我们来定义一套简易的写法来帮助用户来完成程序开发，最终在编译阶段还原即可。</p><p>性能优化的尝试，我更倾向于在浏览器运行时的实践，这两年的性能优化思路大多都是借鉴 React 的核心思想以及一些著名的设计模式，我想换个接入点，一是寻找到很合适有机会的地方，二是使用 WASM 技术来完成这些，不仅可以加深我在浏览器运行时上优化的经验，还可以加深我在 Rust 实践上的技巧，这也是我后面想去做的事情。</p><p>发现人年纪上来之后，会多去想一些有关人活着的意义之类的话题，其实和年纪上来也没什么关系，无非是想让自己活的明白、通透一些罢了。这些，可能才是最有必要想清楚和做的事情了。</p><p>对了，因为 12 月在家与新冠病毒战争的事情，我更加明确了远程办公的重要性！当然了，战争期间，我的领导、单位都很照顾我，我也很感动，我也会为团队，公司好好出一份我的力量！</p><p>再来说说我的劣势吧，缺乏产品思维和商业思维。准确的说是没有完整的产品经历（ 0-1 ）和商业的洞察能力，不过现在接触的低代码领域可以说是从 0 开始的。</p><p>这些是我需要补充的，在具备技术和视野的条件下，我才能从更高的角度来思考问题。</p><p>技术好比是深度，不单单指开发侧的技术，也可以是产品设计、流程把控、人才管理储备等角度来谈。</p><p>视野好比广度，指产品价值、商业价值或是产品方向等角度来谈。</p><p>总之，还是比较虚幻的一个概念，但是我认为这是我往上提升所需要具备的能力。</p><p>我希望我可以在低代码领域深耕，摸透，领悟出新的内容，来创新未来。</p>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://zongzi531.com/categories/Blog/"/>
    
    
    <category term="Blog" scheme="https://zongzi531.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>《初探 Rust》</title>
    <link href="https://zongzi531.com/2022/12/21/%E5%88%9D%E6%8E%A2rust%E5%88%86%E4%BA%AB/"/>
    <id>https://zongzi531.com/2022/12/21/%E5%88%9D%E6%8E%A2rust%E5%88%86%E4%BA%AB/</id>
    <published>2022-12-21T08:55:08.000Z</published>
    <updated>2022-12-21T08:55:08.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><p>欠了好久的分享，本来想为大家分享 Rust 的一些基础，但是明显 Rust 的基础太多了，没法在一次分享里说完整，也不如文档来的全面，所以就简单的挑选几个小点来说一说。</p><p>以及如何使用 <code>cargo</code> 来初始化一个 Rust 项目，本来还想简单的聊一聊如何制作一个 WASM 包，但是考虑到知识点断层的问题，想想还是算了吧（反正我也是摘录网上的内容）。</p><p>总之，这次分享的目的是为了让你能够粗略简单的认识到 Rust 的 1% ，希望吧。</p><p>希望你可以提起兴趣学习剩下的 99% 的内容（当然不是通过我，而是我们一起）。</p><p>要说为什么要学习 Rust ，原因也比较简单，从工程师的角度，不应该只掌握一种语言，至少需要再掌握一门辅助，当然不一定要是 Rust ，也可以是 Go 或者 C++ 。</p><p>再来就是快吧，你要说 Rust 一定快吗？也不全是，但是在大部分场景下是快的。</p><p>当然也是“安全”的，所谓的安全其实也是相对的，就像冰山一样，你看的到的就是安全，看不到的只能自己去摸索了，就像你深入 Rust 一样，你会发现她很危险。</p><p>最后就是卷呗，这可是前端圈的名词，哈哈。</p><p>那我们简单认识一下 Rust 吧～</p><blockquote><p>以下内容基本参考<a href="https://course.rs/">《Rust语言圣经》</a></p></blockquote><h2 id="字符类型-char"><a href="#字符类型-char" class="headerlink" title="字符类型(char)"></a>字符类型(char)</h2><p><img src="/2022/12/21/%E5%88%9D%E6%8E%A2rust%E5%88%86%E4%BA%AB/003.jpeg"></p><p>单引号表示的是字符类型，这和 <code>String</code> 类型有着区别，表示单个字符则使用单引号。</p><h2 id="布尔-bool"><a href="#布尔-bool" class="headerlink" title="布尔(bool)"></a>布尔(bool)</h2><p><img src="/2022/12/21/%E5%88%9D%E6%8E%A2rust%E5%88%86%E4%BA%AB/004.jpeg"></p><p>布尔类型则是 <code>bool</code> ，并且可以显式的声明。</p><h2 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h2><p><img src="/2022/12/21/%E5%88%9D%E6%8E%A2rust%E5%88%86%E4%BA%AB/005.jpeg"></p><p>整数类型和进制。</p><p><img src="/2022/12/21/%E5%88%9D%E6%8E%A2rust%E5%88%86%E4%BA%AB/006.jpeg"></p><p>浮点类型。</p><p>接下来试着创建自己的 World Hello 吧～</p><p>如何在电脑上安装 Rust 这里就不再赘述了，可以参考文档进行安装。</p><p><img src="/2022/12/21/%E5%88%9D%E6%8E%A2rust%E5%88%86%E4%BA%AB/008.jpeg"></p><p>我们执行 <code>cargo</code> 命令来初始化一个项目，类似于 <code>vue create world_hello</code> 或是 <code>create-react-app world_hello</code> 。</p><p><img src="/2022/12/21/%E5%88%9D%E6%8E%A2rust%E5%88%86%E4%BA%AB/009.jpeg"></p><p><code>Cargo.toml</code> 属于项目的信息文件，等同于 <code>package.json</code> 的作用，在安装过依赖后，也会生成一个 <code>Cargo.lock</code> 文件。</p><p><img src="/2022/12/21/%E5%88%9D%E6%8E%A2rust%E5%88%86%E4%BA%AB/010.jpeg"></p><p><code>run</code> 命令则是代表编译和运行。</p><p><img src="/2022/12/21/%E5%88%9D%E6%8E%A2rust%E5%88%86%E4%BA%AB/011.jpeg"></p><p><code>build</code> 命令则是代表编译，然后通过找到编译结果（可执行文件）来运行。</p><p><img src="/2022/12/21/%E5%88%9D%E6%8E%A2rust%E5%88%86%E4%BA%AB/012.jpeg"></p><p>让我们来简单修改一下 <code>main.rs</code> 文件吧。</p><p><img src="/2022/12/21/%E5%88%9D%E6%8E%A2rust%E5%88%86%E4%BA%AB/013.jpeg"></p><p>试着重新编译运行一下吧。</p><p>OK，那就简单的介绍了 Rust 的 1% ，一起加油吧～</p>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Share" scheme="https://zongzi531.com/categories/Share/"/>
    
    
    <category term="Rust" scheme="https://zongzi531.com/tags/Rust/"/>
    
  </entry>
  
  <entry>
    <title>和躺平说达咩</title>
    <link href="https://zongzi531.com/2022/12/01/%E5%92%8C%E8%BA%BA%E5%B9%B3%E8%AF%B4%E8%BE%BE%E5%92%A9/"/>
    <id>https://zongzi531.com/2022/12/01/%E5%92%8C%E8%BA%BA%E5%B9%B3%E8%AF%B4%E8%BE%BE%E5%92%A9/</id>
    <published>2022-12-01T09:25:17.000Z</published>
    <updated>2022-12-01T09:25:17.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><p>总是会感慨到，时间过的好快啊。</p><p>其实并不是，时间从来的都是一秒一秒的过，而度过一年后，在大脑中只有记忆的片段，拼凑在一起的时间很短暂，让你觉得时间过的好快啊。</p><h2 id="任务进度"><a href="#任务进度" class="headerlink" title="任务进度"></a>任务进度</h2><ul><li><em><strong>「日本語学習計画」</strong>：语法及词汇 <strong>第1页</strong></em></li><li><em><strong>「计算机图形学」</strong>：材质与外观</em></li><li><strong>「锻炼身体」</strong>：步行、上楼梯、Just Dance、健身环、刘畊宏直播 <strong>待加强</strong></li><li><em><strong>「ECMA-262」</strong>：6.2.4 The Reference Specification Type</em></li><li><strong>「Rust语言圣经(Rust教程 Rust Course)」</strong>：11.5.1. 数据布局和基本操作</li><li><strong>「Rust By Practice( Rust 练习实践 )」</strong>：17.3. 深入生命周期</li><li><strong>「The <code>wasm-bindgen</code> Guide」</strong>：1.10. web-sys: Closures</li><li><strong>「Rust 秘典（死灵书）」</strong>：3.1. 引用</li></ul><p>回顾前几个月或是前半年或者这一年，本质上自己学习了 Rust ，但是停滞了日语的学习，业余时间基本都在认真生活。</p><p>也不能算是没有收获吧，可以说是生活、工作平衡～ 均衡持续的发展才会健康～</p><p>比较遗憾的是，下半年投身于低代码建设，并没有太多时间研究性能问题，也将 Rust 的应用抛之脑后，准确的来说是没有找到很好的切入点。</p><p>计划 12 月为同事们做一次 Rust 入门的技术分享，希望可以拉起同事们对 Rust 的兴趣，可以形成一个小范围的学习群体，这样应该会更好的找到切入点吧。</p><p>马上也要进行年终总结，按照惯例进行回顾和展望。</p><p>也不难发现随着年纪的增长，记忆力和学习能力也在持续的进行弱化（在给自己的躺平找说辞）。当然，我还是会尽力而为！</p><p>职业定位也出现了微弱的转折，我自然是希望按照我理想状态进行发展，从原本只需要聚焦开发工作外进行了微弱的转变，我始终主张「专业技术经验不足不能轻易尝试管理岗位」这一观点。</p><p>目前除了聚焦开发外，会有机会从软件全局思考一些问题，并参与整体架构设计、里程碑设计等，从更高的角度来看问题。</p><p>这是我需要锻炼的内容。加上技术积累，这样才会让我在未来能够走的更远。</p><p>当然会有更多机会接触到管理大佬，看那些管理方法论，看就好了。</p><p>从自身发展来说，我不希望自己局限于前端，而是要从软件工程师或是工程师的角度来思考问题，把问题边界考虑的更广，想的更多，美其名曰「架构师」。</p><p>就工作来说是这样，平衡发展的另一边则是生活。</p><p>试着在把生活过的更好、更有意义、更有趣也是我需要学习和探索的。</p><p>感谢我的老婆，让我的生命充满了意义！</p><p>嘿嘿，甜一下～</p>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://zongzi531.com/categories/Blog/"/>
    
    
    <category term="Blog" scheme="https://zongzi531.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>svg 文件自动化转组件</title>
    <link href="https://zongzi531.com/2022/11/11/svg%E6%96%87%E4%BB%B6%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BD%AC%E7%BB%84%E4%BB%B6/"/>
    <id>https://zongzi531.com/2022/11/11/svg%E6%96%87%E4%BB%B6%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BD%AC%E7%BB%84%E4%BB%B6/</id>
    <published>2022-11-11T08:52:11.000Z</published>
    <updated>2022-11-11T08:52:11.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><p>这是介于之前发布的<a href="https://zongzi531.com/2020/12/16/img%E6%A0%87%E7%AD%BE%E4%BD%BF%E7%94%A8svg%E5%90%8E%E5%A6%82%E4%BD%95%E6%94%B9%E5%8F%98%E9%A2%9C%E8%89%B2/">《<img> 使用 svg 后如何改变颜色》</a> 的第四种解决方案。</p><p>由于方案三使用的是 CSS 解决，总的来说在部分场景下会不太方便，并且 <code>transform: translate(-1000px);</code> 的值始终不好控制，以至于在某些场景下会导致图片“消失”，就比较诡异。</p><h2 id="方案四"><a href="#方案四" class="headerlink" title="方案四"></a>方案四</h2><p>避免使用 <code>&lt;img&gt;</code> 标签，而是直接使用脚本自动化解析 svg 文件，通过规律生成一个新的 JSX 组件子集，以此来解决问题。</p><p>首先，我们的 svg 文件来自 iconfont ，也以此为例子。</p><p>可以看到 svg 文件格式规律如下：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" standalone="no"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">svg</span> <span class="token name">PUBLIC</span> <span class="token string">"-//W3C//DTD SVG 1.1//EN"</span> <span class="token string">"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200.00px<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 1024 1024<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>/* svg content */<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>由此来扫描 svg 文件夹：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs-extra'</span><span class="token punctuation">)</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> svgs <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'./svgs'</span><span class="token punctuation">)</span> <span class="token comment">// 存放 svg 文件夹</span><span class="token keyword">const</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>svgs<span class="token punctuation">)</span> <span class="token comment">// svg 下的 svg 文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那么我们现在可以获得到 svg 文件，接下来我们需要设计一下生成的 JSX 组件子集：</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">export</span> <span class="token keyword">const</span> svgname <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token operator">></span><span class="token comment">/* svg content */</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们再来设计一下所需的 svg 组件（以 Vue 为例）：</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> svgMap <span class="token keyword">from</span> <span class="token string">'./svgs'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">setup</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">&lt;</span>svg      viewBox<span class="token operator">=</span><span class="token string">"0 0 1024 1024"</span>      version<span class="token operator">=</span><span class="token string">"1.1"</span>      xmlns<span class="token operator">=</span><span class="token string">"http://www.w3.org/2000/svg"</span>    <span class="token operator">></span>      <span class="token punctuation">&#123;</span> svgMap<span class="token punctuation">[</span>props<span class="token punctuation">.</span>name<span class="token punctuation">]</span> <span class="token punctuation">&#125;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>svg<span class="token operator">></span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到此，我们的 svg 组件已设计完成，那么我们只需要实现脚本，自动扫描 svg 文件夹即可实现我们的组件。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs-extra'</span><span class="token punctuation">)</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> svgs <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'./svgs'</span><span class="token punctuation">)</span> <span class="token comment">// 存放 svg 文件夹</span><span class="token keyword">const</span> newFilePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'./svgs.tsx'</span><span class="token punctuation">)</span> <span class="token comment">// JSX 组件子集文件位置</span><span class="token keyword">const</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>svgs<span class="token punctuation">)</span> <span class="token comment">// svg 下的 svg 文件</span><span class="token keyword">const</span> svgContentReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;svg([\s\S]*?)>([\s\S]*?)&lt;\/svg></span><span class="token regex-delimiter">/</span></span> <span class="token comment">// 正则分析 svg 文件内容，可以自行换成其他库，如 magic-string 之类的</span><span class="token keyword">const</span> newFileContent <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// JSX 组件子集内容，如需要避开 eslint ，可设置初始值为 ['/* eslint-disable */']</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> file <span class="token keyword">of</span> files<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>svgs<span class="token punctuation">,</span> <span class="token string">'./'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span>  <span class="token keyword">const</span> res <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span> <span class="token comment">// 读取 svg 文件内容</span>  <span class="token keyword">const</span> content <span class="token operator">=</span> res<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> svgContent <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>svgContentReg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 获取 svg 中 svg 标签内的内容</span>  newFileContent<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">export const </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>file<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'.svg'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> = &lt;></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>svgContent<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  <span class="token comment">// 文件名的解析这边只做了简单处理，可以根据自己的规范调整文件名到命名的转换， 同理 svg 文件内容</span><span class="token punctuation">&#125;</span>fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>newFilePath<span class="token punctuation">,</span> newFileContent<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到此，我们可以快乐的执行自动化脚本，无惧 svg 文件的变更，畅快更新 svg 组件资源，也能更好的改变 svg 的颜色咯～</p><p>但是，目前唯一的缺点就是手动执行的自动化脚本，如果有需要可以更抽象化成 webpack vite rollup 插件。</p>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://zongzi531.com/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://zongzi531.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>【秋】良渚古城遗址公园</title>
    <link href="https://zongzi531.com/2022/11/01/%E7%A7%8B-%E8%89%AF%E6%B8%9A%E5%8F%A4%E5%9F%8E%E9%81%97%E5%9D%80%E5%85%AC%E5%9B%AD/"/>
    <id>https://zongzi531.com/2022/11/01/%E7%A7%8B-%E8%89%AF%E6%B8%9A%E5%8F%A4%E5%9F%8E%E9%81%97%E5%9D%80%E5%85%AC%E5%9B%AD/</id>
    <published>2022-11-01T13:05:21.000Z</published>
    <updated>2022-11-01T13:05:21.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><p>10月的周末和好友一起去了良渚古城遗址公园，这应该是第二次去这个公园了。而且回忆起来两次去都是秋天的时候，也不知道为什么，后面或许可以在其他的季节去看看。</p><p>不过现在哪里都是人，这点真的很烦，不喜欢人多的地方。明显感觉到这次去比上一次人多多了，停车场的车也比原来要多了。</p><p>大概是疫情的关系吧，大家都没什么地方可以去……</p><p>只能杭州周边玩玩，露露营什么的，确实蛮无聊的。</p><p>不过上周末，又去了 Live House 。参加万圣节活动，年轻的气氛顿时就上来了， High 的不行。</p><p>总之，很棒～</p><p>10月也因为国庆放假，所以工作日比较短。但是比较难受的是很忙……</p><p>工作内容没啥可说的，就还是继续低代码。</p><p>你要说有新的进展吗？也没有，要说没有吗？也有。</p><p>反正，持续寻找机会～</p><p>在单位中午也不太敢睡觉，因为天气转凉了，办公室的环境吧，容易感冒……</p><p>总之，吃好睡好，身体第一！</p>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://zongzi531.com/categories/Blog/"/>
    
    
    <category term="Blog" scheme="https://zongzi531.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>思考忙碌的意义</title>
    <link href="https://zongzi531.com/2022/10/01/%E6%80%9D%E8%80%83%E5%BF%99%E7%A2%8C%E7%9A%84%E6%84%8F%E4%B9%89/"/>
    <id>https://zongzi531.com/2022/10/01/%E6%80%9D%E8%80%83%E5%BF%99%E7%A2%8C%E7%9A%84%E6%84%8F%E4%B9%89/</id>
    <published>2022-10-01T09:57:06.000Z</published>
    <updated>2022-10-01T09:57:06.000Z</updated>
    
    <content type="html"><![CDATA[<!-- no node --><span id="more"></span><p>其实会经常思考，人为什么要让自己忙碌起来，是因为清闲会让人觉得空虚吗？或者说是让人感觉度日如年吗？</p><p>感慨到如今的杭州已经不像小时候的杭州那样，让人觉得舒适，因为发展的很快。</p><p>虽然说城市发展快，我也可以选择继续原来的舒适，但是似乎我的性格不允许我这么做。</p><p>所以没有继续呆在原来的单位里，但是现在的这种忙碌会让我觉得，实在是太忙了。</p><p>让我似乎没有精力去或多或少的关注一些除了工作以外的事情，现在的我。</p><p>除了工作，家人几乎没有其他时间。</p><p>这让我觉得，其实并不是我想要的样子，我当然认为工作是必要的，只是这样的忙碌并不是我想要的样子，我只是想在忙碌和清闲中寻找一个适合自己的平衡点。</p><p>对于现在来说，忙碌和清闲的比例划分的确有点不健康。</p><p>虽然说忙碌并不是总有（似乎我在自我安慰或者是为现在的忙碌找推辞），但是我还是会想把这些平衡起来，我想追寻人活着正真的意义，而不是陷入在忙碌中，让自己的时间过的快一些，从而忘掉人活着的意义。</p><p>所以，“负能量”的内容就暂时提到这里。</p><p>未来，平衡忙碌和清闲也会成为我探索意义的基础，从而让我可以更好的感受到活着的意义。</p><h2 id="任务进度"><a href="#任务进度" class="headerlink" title="任务进度"></a>任务进度</h2><ul><li><em><strong>「日本語学習計画」</strong>：语法及词汇 <strong>第1页</strong></em></li><li><em><strong>「计算机图形学」</strong>：材质与外观</em></li><li><strong>「锻炼身体」</strong>：步行、上楼梯、Just Dance、健身环 <strong>待加强</strong></li><li><em><strong>「ECMA-262」</strong>：6.2.4 The Reference Specification Type</em></li><li><strong>「Rust语言圣经(Rust教程 Rust Course)」</strong>：11.5.1. 数据布局和基本操作</li><li><strong>「Rust By Practice( Rust 练习实践 )」</strong>：17.3. 深入生命周期</li><li><strong>「The <code>wasm-bindgen</code> Guide」</strong>：1.10. web-sys: Closures</li></ul><p>再来说说任务进度可以说是停着没动了。</p><p>主要是暂时没有什么精力吧，最近。</p><p>最近主要是在忙着做低代码引擎，引擎这块工作基本完工，目前正在准备接入到现有平台。</p><p>另外一件事情就是职级答辩，比较认真的准备了，在准备过程中也正视了自己，回顾了自己。</p><p>也从现有的工作内容分析了未来自己的发展方向，但是现在回过头来看似乎感觉自己想的还是比较片面的，被工作内容所局限了。</p><p>所以自己未来的发展方向，现在看起来的确还是有点模糊。</p><p>深入技术这一点没错，只是怎么深入，从什么方向深入这点其实没有过思考，以及怎么结合自己擅长的领域去做深入，这时候就要问自己，自己擅长什么？</p><p>也通过一些 SWOT 分析出来自己的长处，不过这是真实的分析结果还是表象的分析结果呢，还得我自己再想一想。</p><p>再一个深入业务也没错，工作驱动我去做的内容，没问题。</p><p>只是，最后我需要通过深入业务后沉淀下来一些什么呢？</p><p>其实仔细分析下来，自己没有想清楚的问题还很多，确实有必要认真想一想，才会让自己未来的努力目标更清晰。</p><p>跑出局限，那么就当下的社会环境来说，怎么样给自己留一个备选方案会比较合适呢。</p><p>从「赛道」的角度来讲，是不是应该布局一些其他「赛道」来为自己的未来争取一些机会呢。</p><p>想一想吧～</p><p>为了有能力让我在意义中探索！</p>]]></content>
    
    
    <summary type="html">&lt;!-- no node --&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://zongzi531.com/categories/Blog/"/>
    
    
    <category term="Blog" scheme="https://zongzi531.com/tags/Blog/"/>
    
  </entry>
  
</feed>
